buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/java_library_plugin.html
 */
apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'utsusemi'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    //compile('org.yaml:snakeyaml:1.18')
    compile('org.freemarker:freemarker:2.3.25-incubating')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'

    // logging
    compile('org.apache.logging.log4j:log4j-core:2.8.1') {transitive = false}
    compile('org.apache.logging.log4j:log4j-api:2.8.1') {transitive = false}
    compile('org.apache.logging.log4j:log4j-slf4j-impl:2.8.1') {transitive = false}
    compile('org.slf4j:slf4j-api:1.7.24') {transitive = false}

    // JDBC libraries
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.0.0'
    compile group: 'com.oracle', name: 'ojdbc6', version: '12.1.0.1-atlassian-hosted'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.16.1'

    testCompile('org.springframework.boot:spring-boot-starter-test')

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:20.0'

    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.7'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:1.0-groovy-2.4'
    testImplementation 'junit:junit:4.12'
}

jacocoTestReport {
    reports {
        xml.enabled true // coveralls plugin depends on xml format report
        html.enabled true
        html.destination "${buildDir}/jacocoHtml"
    }
}

jacocoTestReport.dependsOn test
